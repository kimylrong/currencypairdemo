package com.qiusuo.pair.data.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TradeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public TradeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromIsNull() {
            addCriterion("CURRENCY_FROM is null");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromIsNotNull() {
            addCriterion("CURRENCY_FROM is not null");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromEqualTo(String value) {
            addCriterion("CURRENCY_FROM =", value, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromNotEqualTo(String value) {
            addCriterion("CURRENCY_FROM <>", value, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromGreaterThan(String value) {
            addCriterion("CURRENCY_FROM >", value, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromGreaterThanOrEqualTo(String value) {
            addCriterion("CURRENCY_FROM >=", value, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromLessThan(String value) {
            addCriterion("CURRENCY_FROM <", value, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromLessThanOrEqualTo(String value) {
            addCriterion("CURRENCY_FROM <=", value, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromLike(String value) {
            addCriterion("CURRENCY_FROM like", value, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromNotLike(String value) {
            addCriterion("CURRENCY_FROM not like", value, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromIn(List<String> values) {
            addCriterion("CURRENCY_FROM in", values, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromNotIn(List<String> values) {
            addCriterion("CURRENCY_FROM not in", values, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromBetween(String value1, String value2) {
            addCriterion("CURRENCY_FROM between", value1, value2, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyFromNotBetween(String value1, String value2) {
            addCriterion("CURRENCY_FROM not between", value1, value2, "currencyFrom");
            return (Criteria) this;
        }

        public Criteria andCurrencyToIsNull() {
            addCriterion("CURRENCY_TO is null");
            return (Criteria) this;
        }

        public Criteria andCurrencyToIsNotNull() {
            addCriterion("CURRENCY_TO is not null");
            return (Criteria) this;
        }

        public Criteria andCurrencyToEqualTo(String value) {
            addCriterion("CURRENCY_TO =", value, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToNotEqualTo(String value) {
            addCriterion("CURRENCY_TO <>", value, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToGreaterThan(String value) {
            addCriterion("CURRENCY_TO >", value, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToGreaterThanOrEqualTo(String value) {
            addCriterion("CURRENCY_TO >=", value, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToLessThan(String value) {
            addCriterion("CURRENCY_TO <", value, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToLessThanOrEqualTo(String value) {
            addCriterion("CURRENCY_TO <=", value, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToLike(String value) {
            addCriterion("CURRENCY_TO like", value, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToNotLike(String value) {
            addCriterion("CURRENCY_TO not like", value, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToIn(List<String> values) {
            addCriterion("CURRENCY_TO in", values, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToNotIn(List<String> values) {
            addCriterion("CURRENCY_TO not in", values, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToBetween(String value1, String value2) {
            addCriterion("CURRENCY_TO between", value1, value2, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andCurrencyToNotBetween(String value1, String value2) {
            addCriterion("CURRENCY_TO not between", value1, value2, "currencyTo");
            return (Criteria) this;
        }

        public Criteria andAmountSellIsNull() {
            addCriterion("AMOUNT_SELL is null");
            return (Criteria) this;
        }

        public Criteria andAmountSellIsNotNull() {
            addCriterion("AMOUNT_SELL is not null");
            return (Criteria) this;
        }

        public Criteria andAmountSellEqualTo(BigDecimal value) {
            addCriterion("AMOUNT_SELL =", value, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellNotEqualTo(BigDecimal value) {
            addCriterion("AMOUNT_SELL <>", value, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellGreaterThan(BigDecimal value) {
            addCriterion("AMOUNT_SELL >", value, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AMOUNT_SELL >=", value, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellLessThan(BigDecimal value) {
            addCriterion("AMOUNT_SELL <", value, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AMOUNT_SELL <=", value, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellIn(List<BigDecimal> values) {
            addCriterion("AMOUNT_SELL in", values, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellNotIn(List<BigDecimal> values) {
            addCriterion("AMOUNT_SELL not in", values, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AMOUNT_SELL between", value1, value2, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountSellNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AMOUNT_SELL not between", value1, value2, "amountSell");
            return (Criteria) this;
        }

        public Criteria andAmountBuyIsNull() {
            addCriterion("AMOUNT_BUY is null");
            return (Criteria) this;
        }

        public Criteria andAmountBuyIsNotNull() {
            addCriterion("AMOUNT_BUY is not null");
            return (Criteria) this;
        }

        public Criteria andAmountBuyEqualTo(BigDecimal value) {
            addCriterion("AMOUNT_BUY =", value, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyNotEqualTo(BigDecimal value) {
            addCriterion("AMOUNT_BUY <>", value, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyGreaterThan(BigDecimal value) {
            addCriterion("AMOUNT_BUY >", value, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AMOUNT_BUY >=", value, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyLessThan(BigDecimal value) {
            addCriterion("AMOUNT_BUY <", value, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AMOUNT_BUY <=", value, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyIn(List<BigDecimal> values) {
            addCriterion("AMOUNT_BUY in", values, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyNotIn(List<BigDecimal> values) {
            addCriterion("AMOUNT_BUY not in", values, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AMOUNT_BUY between", value1, value2, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andAmountBuyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AMOUNT_BUY not between", value1, value2, "amountBuy");
            return (Criteria) this;
        }

        public Criteria andRateIsNull() {
            addCriterion("RATE is null");
            return (Criteria) this;
        }

        public Criteria andRateIsNotNull() {
            addCriterion("RATE is not null");
            return (Criteria) this;
        }

        public Criteria andRateEqualTo(BigDecimal value) {
            addCriterion("RATE =", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotEqualTo(BigDecimal value) {
            addCriterion("RATE <>", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateGreaterThan(BigDecimal value) {
            addCriterion("RATE >", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RATE >=", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateLessThan(BigDecimal value) {
            addCriterion("RATE <", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RATE <=", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateIn(List<BigDecimal> values) {
            addCriterion("RATE in", values, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotIn(List<BigDecimal> values) {
            addCriterion("RATE not in", values, "rate");
            return (Criteria) this;
        }

        public Criteria andRateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RATE between", value1, value2, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RATE not between", value1, value2, "rate");
            return (Criteria) this;
        }

        public Criteria andTimePlacedIsNull() {
            addCriterion("TIME_PLACED is null");
            return (Criteria) this;
        }

        public Criteria andTimePlacedIsNotNull() {
            addCriterion("TIME_PLACED is not null");
            return (Criteria) this;
        }

        public Criteria andTimePlacedEqualTo(Date value) {
            addCriterion("TIME_PLACED =", value, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedNotEqualTo(Date value) {
            addCriterion("TIME_PLACED <>", value, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedGreaterThan(Date value) {
            addCriterion("TIME_PLACED >", value, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedGreaterThanOrEqualTo(Date value) {
            addCriterion("TIME_PLACED >=", value, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedLessThan(Date value) {
            addCriterion("TIME_PLACED <", value, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedLessThanOrEqualTo(Date value) {
            addCriterion("TIME_PLACED <=", value, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedIn(List<Date> values) {
            addCriterion("TIME_PLACED in", values, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedNotIn(List<Date> values) {
            addCriterion("TIME_PLACED not in", values, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedBetween(Date value1, Date value2) {
            addCriterion("TIME_PLACED between", value1, value2, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andTimePlacedNotBetween(Date value1, Date value2) {
            addCriterion("TIME_PLACED not between", value1, value2, "timePlaced");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryIsNull() {
            addCriterion("ORIGINATING_COUNTRY is null");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryIsNotNull() {
            addCriterion("ORIGINATING_COUNTRY is not null");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryEqualTo(String value) {
            addCriterion("ORIGINATING_COUNTRY =", value, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryNotEqualTo(String value) {
            addCriterion("ORIGINATING_COUNTRY <>", value, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryGreaterThan(String value) {
            addCriterion("ORIGINATING_COUNTRY >", value, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryGreaterThanOrEqualTo(String value) {
            addCriterion("ORIGINATING_COUNTRY >=", value, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryLessThan(String value) {
            addCriterion("ORIGINATING_COUNTRY <", value, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryLessThanOrEqualTo(String value) {
            addCriterion("ORIGINATING_COUNTRY <=", value, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryLike(String value) {
            addCriterion("ORIGINATING_COUNTRY like", value, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryNotLike(String value) {
            addCriterion("ORIGINATING_COUNTRY not like", value, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryIn(List<String> values) {
            addCriterion("ORIGINATING_COUNTRY in", values, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryNotIn(List<String> values) {
            addCriterion("ORIGINATING_COUNTRY not in", values, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryBetween(String value1, String value2) {
            addCriterion("ORIGINATING_COUNTRY between", value1, value2, "originatingCountry");
            return (Criteria) this;
        }

        public Criteria andOriginatingCountryNotBetween(String value1, String value2) {
            addCriterion("ORIGINATING_COUNTRY not between", value1, value2, "originatingCountry");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRADE
     *
     * @mbggenerated do_not_delete_during_merge Sat Feb 28 14:38:54 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRADE
     *
     * @mbggenerated Sat Feb 28 14:38:54 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}